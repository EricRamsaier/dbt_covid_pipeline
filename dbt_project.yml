# enforce a dbt version range so your CI/CD always runs on a known release
require-dbt-version: [">=1.0.0", "<2.0.0"]

name: 'dbt_pipeline'
version: '1.0.0'
config-version: 2

profile: 'dbt_pipeline'

# -------------------------------------------------------------------
#  Paths
# -------------------------------------------------------------------
model-paths:        ["models"]
analysis-paths:     ["analyses"]
test-paths:         ["tests"]
seed-paths:         ["seeds"]
macro-paths:        ["macros"]
snapshot-paths:     ["snapshots"]
docs-paths:         ["docs"]

dispatch:
  - macro_namespace: dbt_utils
    search_order: ["dbt_pipeline", "dbt_utils"]

target-path: "target"
clean-targets:
  - "target"
  - "dbt_packages"
  - "logs"

# -------------------------------------------------------------------
#  Global model defaults
# -------------------------------------------------------------------
# Note: Database and schema names below define the *production* targets.
#       Non-prod runs (dev/stg) will be routed via custom macros:
#         - generate_database_name(custom_db, node)
#         - generate_schema_name(custom_schema, node)
#       These macros override to target.database and target.schema for dev/stg.

models:
  dbt_pipeline:
    +materialized: ephemeral

    # Persist docs to the database (relation & column comments)
    +persist_docs:
      relation: true
      columns:  true

    # These match the top folder names in the models folder

    # ─ Staging overrides ────────────────────────────────────────
    staging:
      +materialized: view
      +database:  dwh
      +schema:    stg
      +enabled:   true
      +tags:      ['stg']
      +severity:  warn

    # ─ Intermediate overrides ───────────────────────────────────
    intermediate:
      +materialized: view
      +database:  dwh
      +schema:    int
      +enabled:   true
      +tags:      ['int']
      +severity:  warn

    # ─ Marts overrides ──────────────────────────────────────────
    marts:
      +materialized: table
      +database:  reporting
      +schema:    marts
      +enabled:   true
      +tags:      ['marts']
      +severity: error
      +post-hook: "{{ log_model_run() }}"

# -------------------------------------------------------------------
#  Seeds (if you ship any CSVs in /seeds)
# -------------------------------------------------------------------
seeds:
  dbt_pipeline:
    +tags: ['seed']
    +schema: staging     # or wherever you’d like your seeds loaded
    +enabled: true

# -------------------------------------------------------------------
#  Tests
# -------------------------------------------------------------------
tests:
  +store_failures: false
  +severity:      warn   # baseline for schema tests; overridden in marts above

# -------------------------------------------------------------------
#  Quoting
# -------------------------------------------------------------------
quoting:
  database:   false
  schema:     false
  identifier: false

# -------------------------------------------------------------------
#  Optional: project-level vars
# -------------------------------------------------------------------
vars:
  analyst_role: analyst_role
  developer_role: developer_role
  raw_ingest_svc_role: raw_ingest_svc_role
  reporting_svc_role: reporting_svc_role
  transform_svc_role: transform_svc_role

  read_roles:
    - "{{ var('analyst_role') }}"
    - "{{ var('developer_role') }}"
 
# -------------------------------------------------------------------
#  Hooks
# -------------------------------------------------------------------
# we’re managing all infra outside of dbt, so leave these empty
on-run-start: []
on-run-end:
  - "{% if target.name == 'prod' %}{{ grant_select_to_role(target_role=var('analyst_role')) }}{% endif %}"
  - "{% if target.name == 'prod' %}{{ grant_select_to_role(target_role=var('developer_role')) }}{% endif %}"


